package view

import (
	"github.com/docker/docker/api/types"
	"time"
	"fmt"
)

templ ContainersBase() {
	@Base() {
		<h1>Containers</h1>
		<div hx-get="/h/containers" hx-trigger="load every 5s"></div>
	}
}

templ Containers(containers []types.Container) {
	for _, container := range containers {
		<article>
			<div>{ container.Names[0][1:] }</div>
			<div>{ container.Image }</div>
			{ container.State }
			<div>{ container.Status }</div>
			<div>{ timeAgo(container.Created) } ago</div>
		</article>
	}
}

func timeAgo(timestamp int64) string {
	currentTime := time.Now().Unix()
	diff := currentTime - timestamp

	switch {
	case diff < 60:
		return fmt.Sprintf("%d seconds ago", diff)
	case diff < 3600:
		return fmt.Sprintf("%d minutes ago", diff/60)
	case diff < 86400:
		return fmt.Sprintf("%d hours ago", diff/3600)
	default:
		return fmt.Sprintf("%d days ago", diff/86400)
	}
}
