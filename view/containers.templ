package view

import (
	"github.com/docker/docker/api/types"
	"time"
	"fmt"
)

templ ContainersBase() {
	@Base() {
		<div class="max-w-6xl w-full mx-auto grid gap-2">
			<h1 class="font-semibold text-3xl">Containers</h1>
		</div>
		<div class="grid gap-6 max-w-6xl w-full mx-auto">
			<div class="flex flex-col md:flex-row md:items-center gap-2 md:gap-4">
				<input
 					type="search"
 					class="flex h-10 w-full rounded-md border border-input px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 bg-white md:flex-1  "
 					placeholder="Search containers..."
				/>
				<div
 					class="flex items-center gap-4"
 					x-data="{ open: false }"
				>
					<button
 						class="inline-flex items-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 pl-3 flex-1 bg-white justify-start"
 						@click="open = !open"
					>
						<svg
 							xmlns="http://www.w3.org/2000/svg"
 							width="24"
 							height="24"
 							viewBox="0 0 24 24"
 							fill="none"
 							stroke="currentColor"
 							stroke-width="2"
 							stroke-linecap="round"
 							stroke-linejoin="round"
 							class="mr-2 h-4 w-4 shrink-0"
						>
							<path d="M5 12h14"></path>
							<path d="M12 5v14"></path>
						</svg>
						New Repo
					</button>
					@repoModalForm()
				</div>
			</div>
			<div class="border rounded-lg overflow-hidden grid gap-4 lg:gap-px lg:bg-gray-100">
				<div hx-get="/h/containers" hx-trigger="load every 5s"></div>
			</div>
		</div>
	}
}

templ Containers(containers []types.Container) {
	for _, container := range containers {
		<div class="flex flex-col lg:flex-row bg-white text-sm p-2 relative">
			<div class="p-2 grid gap-1 flex-1">
				// IDK why Names is a slice
				// <div class="font-medium">{ strings.Join(container.Names, "|") }</div>
				<div class="font-medium">{ container.Names[0][1:] }</div>
				<div class="text-gray-500  ">{ container.Image }</div>
			</div>
			<div
 				data-orientation="horizontal"
 				role="none"
 				class="shrink-0 bg-gray-100 h-[1px] w-full my-2 lg:hidden"
			></div>
			<div class="p-2 grid gap-1 flex-1">
				<div class="flex items-start gap-2">
					<span class={ "inline-flex w-3 h-3  rounded-full translate-y-1", getStateColor(container.State) }></span>
					<div>
						{ container.State }
						<div class="text-gray-500  ">{ container.Status }</div>
					</div>
				</div>
			</div>
			<div
 				data-orientation="horizontal"
 				role="none"
 				class="shrink-0 bg-gray-100 h-[1px] w-full my-2 lg:hidden"
			></div>
			<div class="p-2 grid gap-1 flex-1">
				<div class="flex items-center gap-2">
					<svg
 						xmlns="http://www.w3.org/2000/svg"
 						width="24"
 						height="24"
 						viewBox="0 0 24 24"
 						fill="none"
 						stroke="currentColor"
 						stroke-width="2"
 						stroke-linecap="round"
 						stroke-linejoin="round"
 						class="w-4 h-4"
					>
						<line x1="6" x2="6" y1="3" y2="15"></line>
						<circle cx="18" cy="6" r="3"></circle>
						<circle cx="6" cy="18" r="3"></circle>
						<path d="M18 9a9 9 0 0 1-9 9"></path>
					</svg>
					main
				</div>
				<div class="flex items-center gap-2">
					<svg
 						xmlns="http://www.w3.org/2000/svg"
 						width="24"
 						height="24"
 						viewBox="0 0 24 24"
 						fill="none"
 						stroke="currentColor"
 						stroke-width="2"
 						stroke-linecap="round"
 						stroke-linejoin="round"
 						class="w-4 h-4"
					>
						<circle cx="12" cy="12" r="3"></circle>
						<line x1="3" x2="9" y1="12" y2="12"></line>
						<line x1="15" x2="21" y1="12" y2="12"></line>
					</svg>
					<span class="line-clamp-1">fix: auth issues for third-party integration</span>
				</div>
			</div>
			<div
 				data-orientation="horizontal"
 				role="none"
 				class="shrink-0 bg-gray-100 h-[1px] w-full my-2 lg:hidden"
			></div>
			<div class="p-2 grid gap-1 flex-1">
				<div class="flex items-center gap-2 text-gray-500  ">{ timeAgo(container.Created) } ago by shadcn</div>
			</div>
			<button
 				class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-10 w-10 absolute top-4 right-4"
 				type="button"
 				id="radix-:R23arnnnla:"
 				aria-haspopup="menu"
 				aria-expanded="false"
 				data-state="closed"
			>
				<svg
 					xmlns="http://www.w3.org/2000/svg"
 					width="24"
 					height="24"
 					viewBox="0 0 24 24"
 					fill="none"
 					stroke="currentColor"
 					stroke-width="2"
 					stroke-linecap="round"
 					stroke-linejoin="round"
 					class="w-4 h-4"
				>
					<circle cx="12" cy="12" r="1"></circle>
					<circle cx="19" cy="12" r="1"></circle>
					<circle cx="5" cy="12" r="1"></circle>
				</svg>
				<span class="sr-only">Toggle menu</span>
			</button>
		</div>
	}
}

templ repoModalForm() {
	<dialog x-show="open" x-dialog.noscroll="open = false">
		<h1>pepep</h1>
		<p>popop</p>
	</dialog>
}

func timeAgo(timestamp int64) string {
	currentTime := time.Now().Unix()
	diff := currentTime - timestamp

	switch {
	case diff < 60:
		return fmt.Sprintf("%d seconds ago", diff)
	case diff < 3600:
		return fmt.Sprintf("%d minutes ago", diff/60)
	case diff < 86400:
		return fmt.Sprintf("%d hours ago", diff/3600)
	default:
		return fmt.Sprintf("%d days ago", diff/86400)
	}
}

func getStateColor(state string) string {
	switch state {
	case "running":
		return "bg-green-400"
	case "exited":
		return "bg-red-400"
	case "paused":
		return "bg-gray-400"
	case "dead":
		return "bg-gray-800"
	default:
		return "bg-gray-400"
	}

}
